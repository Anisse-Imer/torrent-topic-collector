services:
  spark-master:
    container_name: da-spark-master
    build: .
    image: da-spark-image
    entrypoint: ['/opt/spark/apps/entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    env_file:
      - ./spark_apps/.env.spark
    ports:
      - '9090:8080'
      - '7077:7077'
  spark-history-server:
    container_name: da-spark-history
    image: da-spark-image
    entrypoint: ['/opt/spark/apps/entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - ./spark_apps/.env.spark
    volumes:
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'
  spark-worker:
    image: da-spark-image
    entrypoint: ['/opt/spark/apps/entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - ./spark_apps/.env.spark
    volumes:
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka

networks:
  default:

volumes:
  spark-logs:
  kafka_data:
